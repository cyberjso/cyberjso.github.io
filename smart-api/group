{
  "apiVersion": "1.0.1",
  "swaggerVersion": "1.2",
  "consumes": [
    "application/octet-stream"
  ],
  "produces": [
    "application/octet-stream"
  ],
  "apis": [
    {
      "path": "/user/group",
      "operations": [
        {
          "method": "GET",
          "summary": "Vai retornar todos os grupos de um usuário",
          "type": "GroupsProto",
          "nickname": "retrieveUserGroups",
		  "parameters": [
            {
              "name": "body",
              "description": "Struct com os dados do usuário. Nesta operação apenas o atributo userId. Será preeenchido. Quanto ao offset ele define apartir de onde os dados devem ser retornados, caso seja necessário dividir em várias paginas.",
              "required": true,
              "type": "GroupsProto",
              "paramType": "body"
            }
          ],
		  
          "responseMessages": [
            {
              "code": 500,
              "message": "Mensagem de erro com a causa"
              
            },
            {
              "code": 404,
			  "message": "Não existem grupos para serem retornados"
            },
            {
              "code": 200,
			  "message": "retorna Response class"
            }
          ]
        },
		{
	      "method": "POST",
          "summary": "Vai inserir um novo grupo para um dado usuário",
          "type": "GroupsProto",
		  "notes": "Será enviado apenas o grupo que está sendo adicionado. A central terá que inclui-lo aos demais caso existam. A central também será responsável por gerar um identificador unico para cada registro",         
		  "nickname": "createUserEnvironment",
		  "parameters": [
            {
              "name": "body",
              "description": "Struct com os dados do ambiente que está sendo adicionado",
              "required": true,
              "type": "GroupsProto",
              "paramType": "body"
            }
          ],
		  
          "responseMessages": [
            {
              "code": 500,
              "message": "Mensagem de erro com a causa"
              
            },
            {
              "code": 200,
			  "message": "retorna Response class"
            }
          ]		
		},
		{
	      "method": "PUT",
          "summary": "Atualiza dados de um ambiente",
          "type": "GroupsProto",
		  "notes": "Será enviado apenas o ambiente que está sendo atualizado. ",         
		  "nickname": "udateUserEnvironment",
		  "parameters": [
            {
              "name": "body",
              "description": "Struct com os dados do ambiente que está sendo atualizado",
              "required": true,
              "type": "GroupsProto",
              "paramType": "body"
            }
          ],
		  
          "responseMessages": [
            {
              "code": 500,
              "message": "Mensagem de erro com a causa"
              
            },
            {
              "code": 200,
			  "message": "retorna Response class"
            }
          ]		
		}
      ]
    },
	{
      "path": "/user/environment/dependents",
      "operations": [
        {
          "method": "GET",
          "summary": "Retorna todos os usuários que estão associados a cada ambiente",
          "type": "EnvironmentProtoUsers",
		  "parameters": [
            {
              "name": "body",
              "description": "Conterá preeenchido apenas envId e userOwner",
              "required": true,
              "type": "EnvironmentProtoUsers",
              "paramType": "body"
            }
          ],
          "nickname": "retrieveEnvironmentDependents", 
          "responseMessages": [
            {
              "code": 500,
              "message": "Mensagem de erro com a causa"
            },
			{
              "code": 404,
              "message": "Não existem dependentes neste ambiente"
            },
      			
            {
              "code": 200,
              "message": "retorna Response class"
            }
          ]
        },
        {
          "method": "PUT",
          "summary": "Atualiza lista de dependentes associados a um ambiente",
          "type": "void",
		  "parameters": [
            {
              "name": "body",
              "description": "Conterá uma lista com todos os usuários associados ao ambiente",
              "required": true,
              "type": "EnvironmentProtoUsers",
              "paramType": "body"
            }
          ],
          "nickname": "updateEnvironmentDependents", 
          "responseMessages": [
            {
              "code": 500,
              "message": "Mensagem de erro com a causa"
            },
			{
              "code": 404,
              "message": "Não existem dependentes neste ambiente"
            },
      			
            {
              "code": 200,
              "message": "retorna Response class"
            }
          ]
        }
      ]
    },
	{
      "path": "/user/environment/devices",
      "operations": [
        {
          "method": "GET",
          "summary": "Retorna todos os devices que estão associados a um ambiente",
          "type": "EnvironmentProtoDevices",
		  "parameters": [
            {
              "name": "body",
              "description": "Conterá preeenchido apenas envId e userOwner",
              "required": true,
              "type": "EnvironmentProtoDevices",
              "paramType": "body"
            }
          ],
          "nickname": "retrieveEnvironmentDevices", 
          "responseMessages": [
            {
              "code": 500,
              "message": "Mensagem de erro com a causa"
            },
			{
              "code": 404,
              "message": "Não existem devices neste ambiente"
            },
      			
            {
              "code": 200,
              "message": "retorna Response class"
            }
          ]
        },
        {
          "method": "PUT",
          "summary": "Atualiza lista de devices associados a um ambiente",
          "type": "void",
		  "parameters": [
            {
              "name": "body",
              "description": "Conterá uma lista com todos os devices associados ao ambiente",
              "required": true,
              "type": "EnvironmentProtoDevices",
              "paramType": "body"
            }
          ],
          "nickname": "updateEnvironmentDevices", 
          "responseMessages": [
            {
              "code": 500,
              "message": "Mensagem de erro com a causa"
            },
			{
              "code": 404,
              "message": "Não existem dependentes neste ambiente"
            },
            {
              "code": 200,
              "message": "retorna Response class"
            }
          ]
        }
      ]
    }
  ],
  "models": {
    "GroupsProto": {
      "id": "GroupsProto",
      "properties": {
        "userId": {
          "type": "char",
		  "required": true
        },
        "offset": {
          "type": "int32"
        },
		"environment": {
			"type" : "GroupProto"
		}
      }
    },
	"GroupProto": {
      "id": "GroupProto",
      "properties": {
        "uuid": {
          "type": "char",
		  "required": true
        },
        "desc": {
          "type": "char"
        },
		"iconId" : {
			"type": "int32"
		},
		"users" : {
			"type" : "array"
		}, 
		"devices" : {
			"type" : "array"
		}
      }
    },
	"EnvironmentProtoUsers": {
		"id": "EnvironmentProtoUsers",
		"properties" : {
			"envId": {
				"type" : "char"
			},
			"userOwner" : {
				"type" : "char"
			},
			"users" : {	
				"type" : "array"
			}
		}
	},
	"EnvironmentProtoDevices": {
		"id": "EnvironmentProtoDevices",
		"properties" : {
			"envId": {
				"type" : "char"
			},
			"userOwner" : {
				"type" : "char"
			},
			"devices" : {	
				"type" : "array"
			}
		}
	}	
  }
}